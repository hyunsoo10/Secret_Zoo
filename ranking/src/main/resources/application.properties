spring.output.ansi.enabled=always

# redis
spring.redis.host=localhost
spring.redis.port=6379

# mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/rank_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=ssafy

# JPA 설정
spring.jpa.open-in-view=true
spring.jpa.hibernate.ddl-auto=update



# Hibernate 5.0 부터 GenerationType.AUTO는 IDENTITY가 아닌 TABLE을 기본 시퀀스 전략으로 사용합니다.
# hibernate.id.new_generator_mappings = false일 경우 사용하는 DB(Dialect)에 의해 Generator가 결정됩니다.
spring.jpa.hibernate-use-new-id-generator-mappings=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


logging.level.root=info



# H2 database
#spring.datasource.url=jdbc:h2:tcp://localhost/~/game
#spring.datasource.username=sa
#spring.datasource.password=1234
#spring.datasource.driver-class-name=org.h2.Driver


#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.format_sql=false
#spring.jpa.properties.hibernate.default_batch_fetch_size=100
#spring.jpa.properties.hibernate.show_sql=true



rank.update.interval.minutes=1
rank.max.count=10
rank.update.interval=10000

